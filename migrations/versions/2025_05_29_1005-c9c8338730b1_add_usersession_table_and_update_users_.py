"""Add UserSession table and update Users table for new Auth process storing tokens

Revision ID: c9c8338730b1
Revises: 1606fadff157
Create Date: 2025-05-29 10:05:52.752952

"""
from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa
import sqlmodel # Ensure sqlmodel is imported if you use its types

# revision identifiers, used by Alembic.
revision: str = 'c9c8338730b1'
down_revision: Union[str, None] = '1606fadff157'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # --- Modifications to existing 'users' table ---
    op.add_column('users', sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False, server_default=sa.func.now(), onupdate=sa.func.now())) # Consider server-side onupdate
    op.add_column('users', sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, server_default=sa.func.now()))

    op.alter_column('users', 'is_active',
               existing_type=sa.Boolean(),
               nullable=False,
               server_default=sa.true())
    op.alter_column('users', 'is_superuser',
               existing_type=sa.Boolean(),
               nullable=False,
               server_default=sa.false())
    
    # Ensure email index exists (it might have been missed in the first migration's upgrade)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)

    # --- Create new 'user_sessions' table ---
    op.create_table('user_sessions',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('refresh_token_jti', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False, server_default=sa.true()),
        sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, server_default=sa.func.now()),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_sessions_refresh_token_jti'), 'user_sessions', ['refresh_token_jti'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_sessions_refresh_token_jti'), table_name='user_sessions')
    op.drop_table('user_sessions')
    
    # Reverse modifications to 'users' table
    op.drop_column('users', 'last_login_at')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')

    # Revert server_default changes
    op.alter_column('users', 'is_superuser',
               existing_type=sa.Boolean(),
               nullable=False,
               server_default=None)
    op.alter_column('users', 'is_active',
               existing_type=sa.Boolean(),
               nullable=False,
               server_default=None)
    
    op.drop_index(op.f('ix_users_email'), table_name='users')
    # ### end Alembic commands ###